TODO:
 - Test cases

 - Documentation

 - Binary protocol (not text) support
   ?? Unclear if packing/unpacking will be faster than stringifying
   dbh['altpg_result_format'] and sth['altpg_result_format']

 - restrict to protocol 3, server version 8.0+

 - BLOB support
   ?? as blob objects?

 - array support

 - Document DATE/TIMESTAMP Date/DateTime dissonance
   Ruby and PG don't agree on calendar reforms hundreds of years ago...

 - gem-ify

DONE:
 - h['altpg_client_encoding']

 - dbh.__set_variable, dbh.__show_variable

 - dbd_db.do() parameterization

 - StatementHandle parameterized query support

 - dbd_db.do() direct (unprepared) execution implementation

 - workaround dbi-0.4.3 default String parameter conversion
   It quotes, but we want the backend to do that

 - support precision, scale in dbd_db.columns, dbd_st.column_info
   (without extraneous SQL lookup)

 - 'async' connection and execution
   i.e., don't block ruby threads

 - dbd_st.finish implies DEALLOCATE
   n.b.: forgotten statements are never DEALLOCATEd, and that's ok

 - avoid PREPAREd statement name collision
